# Workflow 2: Build and Deploy (Production Only)
name: Build and Deploy

on:
  push:
    branches: [ prod ]
  workflow_dispatch:  # Manual trigger option

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION_PROD }}
  SERVICE_NAME: ${{ vars.GCP_CLOUD_RUN_SERVICE_NAME }}
  ARTIFACT_REGISTRY_REPO: ${{ vars.GCP_ARTIFACT_REGISTRY_REPO_PROD }}

jobs:
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    outputs:
      image_uri: ${{ steps.meta.outputs.image_uri }}
      image_tag: ${{ steps.meta.outputs.tag }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_PATH_PROD }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_PROD }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
        
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
        
    - name: Generate image metadata
      id: meta
      run: |
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        SHORT_SHA=${GITHUB_SHA::8}
        TAG="prod-${TIMESTAMP}-${SHORT_SHA}"
        IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:${TAG}"
        
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        echo "image_uri=${IMAGE_URI}" >> $GITHUB_OUTPUT
        echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
        
    - name: Build and push image
      run: |
        gcloud builds submit \
          --config=cloudbuild.yaml \
          --service-account="projects/${{ env.PROJECT_ID }}/serviceAccounts/${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_PROD }}" \
          --substitutions=_IMAGE_URI="${{ steps.meta.outputs.image_uri }}" \
          .

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_PATH_PROD }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_PROD }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image="${{ needs.build.outputs.image_uri }}" \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --min-instances=0 \
          --max-instances=10 \
          --port=8080 \
          --timeout=300 \
          --concurrency=80
          
    - name: Update traffic to new revision
      run: |
        gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
          --to-latest \
          --region=${{ env.REGION }}
          
    - name: Get service URL and run health check
      id: deploy-check
      run: |
        URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --format="value(status.url)")
        
        echo "service_url=${URL}" >> $GITHUB_OUTPUT
        
        # Health check
        sleep 30
        if curl -f "${URL}/health" --max-time 30; then
          echo "✅ Health check passed"
        else
          echo "❌ Health check failed"
          exit 1
        fi
        
    - name: Deployment summary
      run: |
        echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ needs.build.outputs.image_uri }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: ${{ needs.build.outputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Service URL**: ${{ steps.deploy-check.outputs.service_url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Health Check**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
