# Workflow 1: Test and Auto-merge to Prod
name: Test and Auto-merge

on:
  push:
    branches: 
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
  pull_request:
    branches: [ prod ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install the package in editable mode first
        pip install -e .
        # Install additional testing dependencies
        pip install pytest pytest-cov pytest-flask flake8 black
        # Verify installation
        python -c "import app; print('âœ“ App package installed successfully')"
        
    - name: Run code quality checks
      run: |
        flake8 app/
        black --check app/ --line-length=88
        
    - name: Run tests with coverage
      run: |
        # Debug: Show working directory and Python path
        pwd
        ls -la
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "Checking if app module can be imported:"
        python -c "import app; print('âœ“ App module imported successfully')"
        echo "Looking for test files:"
        find . -name "test_*.py" -o -name "*_test.py"
        echo "Running pytest with verbose output:"
        # pytest.ini automatically applies all configuration
        PYTHONPATH=. pytest -v
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'

  auto-merge-to-prod:
    name: Auto-merge to Prod
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref != 'refs/heads/prod' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Merge to prod
      run: |
        git checkout prod
        git pull origin prod
        git merge --no-ff ${{ github.ref_name }} -m "Auto-merge: ${{ github.ref_name }} â†’ prod"
        git push origin prod
        
    - name: Notify success
      run: |
        echo "âœ… Successfully merged ${{ github.ref_name }} â†’ prod"
        echo "ðŸš€ Deployment workflow will trigger automatically"
